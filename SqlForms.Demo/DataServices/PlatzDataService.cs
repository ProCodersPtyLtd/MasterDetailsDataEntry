// *******************************************************************************************************
// This code is auto generated by Platz.ObjectBuilder template, any changes made to this code will be lost
// *******************************************************************************************************
using System;
using System.Collections.Generic;
using System.Text;
using System.Linq;
using Platz.ObjectBuilder;
using Platz.SqlForms;
using MasterDetailsDataEntry.Demo.Database;

namespace Default
{
    #region Interface 

    public partial interface IMyDataService
    {
        List<CustAddrSubQuery> GetCustAddrSubQueryList(params object[] parameters);
        List<Cust> GetCustList(params object[] parameters);
        List<CustomerAddress> GetCustomerAddressList(params object[] parameters);
        List<ProdModel> GetProdModelList(params object[] parameters);
    }

    #endregion

    #region Data Service 

    public partial class MyDataService : DataServiceBase<AdventureWorksContext>, IMyDataService
    {
        public List<CustAddrSubQuery> GetCustAddrSubQueryList(params object[] parameters)
        {
            using (var db = GetDbContext())
            {
            
                var Query2 =
                    from c in db.CustomerAddress
                    select new 
                    { 
                        CustomerId = c.CustomerId, 
                        AddressId = c.AddressId, 
                        type = c.AddressType, 
                        ModifiedDate = c.ModifiedDate, 
                    };
            
                var Query1 =
                    from q in Query2
                    select new 
                    { 
                        CustomerId = q.CustomerId, 
                        AddressId = q.AddressId, 
                        type2 = q.type, 
                        ModifiedDate = q.ModifiedDate, 
                    };
            
                var query =
                    from c in db.Customer
                    join q in Query1 on c.CustomerId equals q.CustomerId
                    select new CustAddrSubQuery
                    { 
                        CustomerId = q.CustomerId, 
                        AddressId = q.AddressId, 
                        type2 = q.type2, 
                        ModifiedDate = q.ModifiedDate, 
                        CompanyName = c.CompanyName, 
                        EmailAddress = c.EmailAddress, 
                        FirstName = c.FirstName, 
                        LastName = c.LastName, 
                        MiddleName = c.MiddleName, 
                        NameStyle = c.NameStyle, 
                        PasswordHash = c.PasswordHash, 
                        PasswordSalt = c.PasswordSalt, 
                        Phone = c.Phone, 
                        Rowguid = c.Rowguid, 
                        SalesPerson = c.SalesPerson, 
                        Suffix = c.Suffix, 
                        Title = c.Title, 
                    };

                var result = query.ToList();
                return result;
            }
        }

        public List<Cust> GetCustList(params object[] parameters)
        {
            var name = (String)parameters[0];

            using (var db = GetDbContext())
            {
            
                var query =
                    from c in db.Customer
                    where c.FirstName == name
                    select new Cust
                    { 
                        CustomerId = c.CustomerId, 
                        CompanyName = c.CompanyName, 
                        EmailAddress = c.EmailAddress, 
                        FirstName = c.FirstName, 
                        LastName = c.LastName, 
                        MiddleName = c.MiddleName, 
                        ModifiedDate = c.ModifiedDate, 
                        NameStyle = c.NameStyle, 
                        PasswordHash = c.PasswordHash, 
                        PasswordSalt = c.PasswordSalt, 
                        Phone = c.Phone, 
                        Rowguid = c.Rowguid, 
                        SalesPerson = c.SalesPerson, 
                        Suffix = c.Suffix, 
                        Title = c.Title, 
                    };

                var result = query.ToList();
                return result;
            }
        }

        public List<CustomerAddress> GetCustomerAddressList(params object[] parameters)
        {
            var p1 = (Int32)parameters[0];

            using (var db = GetDbContext())
            {
            
                var query =
                    from cu in db.Customer
                    join c in db.CustomerAddress on cu.CustomerId equals c.CustomerId
                    join a in db.Address on c.AddressId equals a.AddressId
                    where c.CustomerId == p1
                    select new CustomerAddress
                    { 
                        AddressId = a.AddressId, 
                        AddressLine1 = a.AddressLine1, 
                        AddressLine2 = a.AddressLine2, 
                        City = a.City, 
                        CountryRegion = a.CountryRegion, 
                        ModifiedDate = a.ModifiedDate, 
                        PostalCode = a.PostalCode, 
                        Rowguid = a.Rowguid, 
                        StateProvince = a.StateProvince, 
                        CustomerId = c.CustomerId, 
                        AddressType = c.AddressType, 
                        Title = cu.Title, 
                        FirstName = cu.FirstName, 
                        LastName = cu.LastName, 
                    };

                var result = query.ToList();
                return result;
            }
        }

        public List<ProdModel> GetProdModelList(params object[] parameters)
        {
            using (var db = GetDbContext())
            {
            
                var query =
                    from p in db.ProductModel
                    select new ProdModel
                    { 
                        ProductModelId = p.ProductModelId, 
                        CatalogDescription = p.CatalogDescription, 
                        Name = p.Name, 
                    };

                var result = query.ToList();
                return result;
            }
        }

    }

    #endregion

    #region Entities

    public partial class CustAddrSubQuery
    {
        public Int32 CustomerId { get; set; }
        public Int32 AddressId { get; set; }
        public String type2 { get; set; }
        public DateTime ModifiedDate { get; set; }
        public String CompanyName { get; set; }
        public String EmailAddress { get; set; }
        public String FirstName { get; set; }
        public String LastName { get; set; }
        public String MiddleName { get; set; }
        public Boolean NameStyle { get; set; }
        public String PasswordHash { get; set; }
        public String PasswordSalt { get; set; }
        public String Phone { get; set; }
        public Guid Rowguid { get; set; }
        public String SalesPerson { get; set; }
        public String Suffix { get; set; }
        public String Title { get; set; }
    }

    public partial class Cust
    {
        public Int32 CustomerId { get; set; }
        public String CompanyName { get; set; }
        public String EmailAddress { get; set; }
        public String FirstName { get; set; }
        public String LastName { get; set; }
        public String MiddleName { get; set; }
        public DateTime ModifiedDate { get; set; }
        public Boolean NameStyle { get; set; }
        public String PasswordHash { get; set; }
        public String PasswordSalt { get; set; }
        public String Phone { get; set; }
        public Guid Rowguid { get; set; }
        public String SalesPerson { get; set; }
        public String Suffix { get; set; }
        public String Title { get; set; }
    }

    public partial class CustomerAddress
    {
        public Int32 AddressId { get; set; }
        public String AddressLine1 { get; set; }
        public String AddressLine2 { get; set; }
        public String City { get; set; }
        public String CountryRegion { get; set; }
        public DateTime ModifiedDate { get; set; }
        public String PostalCode { get; set; }
        public Guid Rowguid { get; set; }
        public String StateProvince { get; set; }
        public Int32 CustomerId { get; set; }
        public String AddressType { get; set; }
        public String Title { get; set; }
        public String FirstName { get; set; }
        public String LastName { get; set; }
    }

    public partial class ProdModel
    {
        public Int32 ProductModelId { get; set; }
        public String CatalogDescription { get; set; }
        public DateTime ModifiedDate { get; set; }
        public String Name { get; set; }
        public Guid Rowguid { get; set; }
    }

    #endregion
}
