@namespace Platz.ObjectBuilder.Blazor.Forms

        <div class="forms-uncap">Form</div>

        <div class="forms-grid">
            <div class="row-nospace-sm">
                <div class="col-sm-4 forms-nospace">
                    Name
                </div>
                <div class="col-sm-8 forms-nospace">
                    <input id="BindingInput" value="@FormsPageController.Model.Name" @onchange="FormNameChanged" class="form-control" />
                </div>
            </div>

            <div class="row-nospace-sm">
                <div class="col-sm-4 forms-nospace">
                    Type
                </div>
                <div class="col-sm-8 forms-nospace">
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="flexRadioDisabled" id="flexRadioDisabled" 
                               checked="@(!_ctrl.Model.IsListForm)" @onchange="EditFormChanged" >
                        <label class="form-check-label" for="flexRadioDisabled">
                            Edit Form
                        </label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="flexRadioDisabled" id="flexRadioCheckedDisabled" 
                               checked="@(_ctrl.Model.IsListForm)" @onchange="ListFormChanged">
                        <label class="form-check-label" for="flexRadioCheckedDisabled">
                            List Navigation Form
                        </label>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-sm-4">
                    Schema
                </div>
                <div class="col-sm-8">
                    <select class="form-control selectpicker" value="@_ctrl.Model.Schema" @onchange="SchemaChanged">
                        <option value=""></option>

                        @foreach (var item in _ctrl.Model.Schemas)
                        {
                            <option value="@item">@item</option>
                        }
                    </select>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-4">
                    Datasource
                </div>
                <div class="col-sm-8">
                    <select class="form-control selectpicker" value="@_ctrl.Model.Datasource" @onchange="DatasourceChanged">
                        <option value=""></option>

                        @foreach (var item in _ctrl.Model.Datasources)
                        {
                            <option value="@item">@item</option>
                        }
                    </select>
                </div>
            </div>
        </div>

@code {
    [CascadingParameter]
    public IFormBuilderController FormsPageController { get; set; }

    [Parameter]
    public EventCallback<ChangeEventArgs> ModelChanged { get; set; }

    private IFormBuilderController _ctrl {  get { return FormsPageController; } }

    private async Task SchemaChanged(ChangeEventArgs a)
    {
        _ctrl.Model.Schema = a.Value.ToString();
        _ctrl.RefreshDatasources();
    }

    private async Task DatasourceChanged(ChangeEventArgs a)
    {
        _ctrl.Model.Datasource = a.Value.ToString();
    }

    private async Task EditFormChanged(ChangeEventArgs a)
    { }

    private async Task FormNameChanged(ChangeEventArgs a)
    {
        _ctrl.UpdateFormName(a.Value.ToString());
        await Change();
    }

    private async Task ListFormChanged(ChangeEventArgs a)
    { }

    private async Task Change()
    {
        FormsPageController.Change();
        await ModelChanged.InvokeAsync();
    }
}
