@page "/"

@using Platz.ObjectBuilder

<div style="vertical-align: top">

    <ul class="nav nav-tabs" role="tablist">
        <li class="nav-item">
            <a class="nav-link active" data-toggle="tab" href="#w1" @onclick="@(async() => await TabClick(0))">
                <button class="close closeTab" type="button" @onclick="@(async() => await TabCloseClick(0))">×</button>CRM
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link" data-toggle="tab" href="#w2" @onclick="@(async() => await TabClick(1))">
                <button class="close closeTab" type="button" @onclick="@(async() => await TabCloseClick(1))">×</button>Query1
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link" data-toggle="tab" href="#w3" @onclick="@(async() => await TabClick(2))">
                <button class="close closeTab" type="button" @onclick="@(async() => await TabCloseClick(2))">×</button>Form1
            </a>
        </li>
    </ul>

    @* we don't need bs containers - use blazor events
    <div class="tab-content">
        <div id="w1" class="container tab-pane active">
        </div>
        <div id="w2" class="container tab-pane fade">
        </div>
        <div id="w3" class="container tab-pane fade">
        </div>
    </div>*@

    <EditorPage />

</div>

@code {
    private int _selectedIndex;

    private async Task TabClick(int index)
    {
        // if (index > _tabs.Count-1) return;

        _selectedIndex = index;
        StateHasChanged();
    }

    private async Task TabCloseClick(int index)
    {
    }
}
