// *******************************************************************************************************
// This code is auto generated by Platz.ObjectBuilder template, any changes made to this code will be lost
// *******************************************************************************************************
using System;
using System.Collections.Generic;
using System.Text;
using System.Linq;
using Platz.ObjectBuilder;
using Platz.SqlForms;

namespace Default
{
    #region Interface 

    public partial interface IMyDataService
    {
        List<Addr> GetAddrList(params object[] parameters);
        List<Cust> GetCustList(params object[] parameters);
        List<CustomerOrder> GetCustomerOrderList(params object[] parameters);
    }

    #endregion

    #region Data Service 

    public partial class MyDataService : DataServiceBase<MasterDetailsDataEntry.Demo.Database.AdventureWorksContext>, IMyDataService
    {
        public List<Addr> GetAddrList(params object[] parameters)
        {
            var id = (Int32)parameters[0];

            using (var db = GetDbContext())
            {
                var query =
                    from a in db.Address 
                    where a.AddressId == id
                    select new Addr
                    {
                        AddressId = a.AddressId,
                        AddressLine1 = a.AddressLine1,
                        AddressLine2 = a.AddressLine2,
                        City = a.City,
                        CountryRegion = a.CountryRegion,
                        ModifiedDate = a.ModifiedDate,
                        PostalCode = a.PostalCode,
                        Rowguid = a.Rowguid,
                        StateProvince = a.StateProvince,
                    };

                var result = query.ToList();
                return result;
            }
        }

        public List<Cust> GetCustList(params object[] parameters)
        {
            var name = (String)parameters[0];

            using (var db = GetDbContext())
            {
                var query =
                    from c in db.Customer 
                    where c.FirstName == name
                    select new Cust
                    {
                        CustomerId = c.CustomerId,
                        CompanyName = c.CompanyName,
                        EmailAddress = c.EmailAddress,
                        FirstName = c.FirstName,
                        LastName = c.LastName,
                        MiddleName = c.MiddleName,
                        ModifiedDate = c.ModifiedDate,
                        NameStyle = c.NameStyle,
                        PasswordHash = c.PasswordHash,
                        PasswordSalt = c.PasswordSalt,
                        Phone = c.Phone,
                        Rowguid = c.Rowguid,
                        SalesPerson = c.SalesPerson,
                        Suffix = c.Suffix,
                        Title = c.Title,
                    };

                var result = query.ToList();
                return result;
            }
        }

        public List<CustomerOrder> GetCustomerOrderList(params object[] parameters)
        {
            var cid = (Int32)parameters[0];
            var fname = (String)parameters[1];

            using (var db = GetDbContext())
            {
                var query =
                    from c in db.Customer 
                    join cu in db.CustomerAddress on c.CustomerId equals cu.CustomerId
                    join s in db.SalesOrderHeader on c.CustomerId equals s.CustomerId
                    where (c.CustomerId == cid) && (c.FirstName == fname)
                    select new CustomerOrder
                    {
                        CustomerId = c.CustomerId,
                        CompanyName = c.CompanyName,
                        EmailAddress = c.EmailAddress,
                        FirstName = c.FirstName,
                        LastName = c.LastName,
                        MiddleName = c.MiddleName,
                        ModifiedDate = c.ModifiedDate,
                        NameStyle = c.NameStyle,
                        PasswordHash = c.PasswordHash,
                        PasswordSalt = c.PasswordSalt,
                        Phone = c.Phone,
                        Rowguid = c.Rowguid,
                        SalesPerson = c.SalesPerson,
                        Suffix = c.Suffix,
                        Title = c.Title,
                        AddressId = cu.AddressId,
                        SalesOrderId = s.SalesOrderId,
                        AccountNumber = s.AccountNumber,
                        BillToAddressId = s.BillToAddressId,
                        Comment = s.Comment,
                        CreditCardApprovalCode = s.CreditCardApprovalCode,
                        DueDate = s.DueDate,
                        Freight = s.Freight,
                        OnlineOrderFlag = s.OnlineOrderFlag,
                        OrderDate = s.OrderDate,
                        PurchaseOrderNumber = s.PurchaseOrderNumber,
                        RevisionNumber = s.RevisionNumber,
                        SalesOrderNumber = s.SalesOrderNumber,
                        ShipDate = s.ShipDate,
                        ShipMethod = s.ShipMethod,
                        ShipToAddressId = s.ShipToAddressId,
                        Status = s.Status,
                        SubTotal = s.SubTotal,
                        TaxAmt = s.TaxAmt,
                        TotalDue = s.TotalDue,
                    };

                var result = query.ToList();
                return result;
            }
        }

    }

    #endregion

    #region Entities

    public partial class Addr
    {
        public Int32 AddressId { get; set; }
        public String AddressLine1 { get; set; }
        public String AddressLine2 { get; set; }
        public String City { get; set; }
        public String CountryRegion { get; set; }
        public DateTime ModifiedDate { get; set; }
        public String PostalCode { get; set; }
        public Guid Rowguid { get; set; }
        public String StateProvince { get; set; }
    }

    public partial class Cust
    {
        public Int32 CustomerId { get; set; }
        public String CompanyName { get; set; }
        public String EmailAddress { get; set; }
        public String FirstName { get; set; }
        public String LastName { get; set; }
        public String MiddleName { get; set; }
        public DateTime ModifiedDate { get; set; }
        public Boolean NameStyle { get; set; }
        public String PasswordHash { get; set; }
        public String PasswordSalt { get; set; }
        public String Phone { get; set; }
        public Guid Rowguid { get; set; }
        public String SalesPerson { get; set; }
        public String Suffix { get; set; }
        public String Title { get; set; }
    }

    public partial class CustomerOrder
    {
        public Int32 CustomerId { get; set; }
        public String CompanyName { get; set; }
        public String EmailAddress { get; set; }
        public String FirstName { get; set; }
        public String LastName { get; set; }
        public String MiddleName { get; set; }
        public DateTime ModifiedDate { get; set; }
        public Boolean NameStyle { get; set; }
        public String PasswordHash { get; set; }
        public String PasswordSalt { get; set; }
        public String Phone { get; set; }
        public Guid Rowguid { get; set; }
        public String SalesPerson { get; set; }
        public String Suffix { get; set; }
        public String Title { get; set; }
        public Int32 AddressId { get; set; }
        public Int32 SalesOrderId { get; set; }
        public String AccountNumber { get; set; }
        public Int32? BillToAddressId { get; set; }
        public String Comment { get; set; }
        public String CreditCardApprovalCode { get; set; }
        public DateTime DueDate { get; set; }
        public Decimal Freight { get; set; }
        public Boolean? OnlineOrderFlag { get; set; }
        public DateTime OrderDate { get; set; }
        public String PurchaseOrderNumber { get; set; }
        public Byte RevisionNumber { get; set; }
        public String SalesOrderNumber { get; set; }
        public DateTime? ShipDate { get; set; }
        public String ShipMethod { get; set; }
        public Int32? ShipToAddressId { get; set; }
        public Byte Status { get; set; }
        public Decimal SubTotal { get; set; }
        public Decimal TaxAmt { get; set; }
        public Decimal TotalDue { get; set; }
    }

    #endregion
}
